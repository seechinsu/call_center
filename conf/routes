# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET       /cases                      controllers.CaseController.getAllCases
GET       /people                     controllers.PersonController.getAllPeople
GET       /lea                        controllers.LawEnforcementController.getAllLea
GET       /vehicle                    controllers.VehicleController.getAllVehicles
GET       /narrative                  controllers.NarrativeController.getAllNarratives

+ nocsrf
POST      /cases                      controllers.CaseController.createCase
+ nocsrf
POST      /people                     controllers.PersonController.createPerson
+ nocsrf
POST      /lea                        controllers.LawEnforcementController.createLawEnforcement
+ nocsrf
POST      /vehicle                    controllers.VehicleController.createVehicle
+ nocsrf
POST      /narrative                  controllers.NarrativeController.createNarrative

+ nocsrf
DELETE    /cases/:id                  controllers.CaseController.deleteCase(id: reactivemongo.bson.BSONObjectID)
+ nocsrf
DELETE    /people/:id                 controllers.PersonController.deletePerson(id: reactivemongo.bson.BSONObjectID)
+ nocsrf
DELETE    /lea/:id                    controllers.LawEnforcementController.deleteLawEnforcement(id: reactivemongo.bson.BSONObjectID)
+ nocsrf
DELETE    /vehicle/:id                controllers.VehicleController.deleteVehicle(id: reactivemongo.bson.BSONObjectID)
+ nocsrf
DELETE    /narrative/:id              controllers.NarrativeController.deleteNarrative(id: reactivemongo.bson.BSONObjectID)


# Swagger docs
GET       /                           controllers.ApiDocsController.redirectToDocs
GET       /swagger.json               controllers.ApiHelpController.getResources
GET       /api-docs                   controllers.ApiDocsController.redirectToDocs

# Map static resources from the /public folder to the /assets URL path
GET       /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
